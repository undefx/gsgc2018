/* jshint esversion: 6 */

// Defines the geometry of the playable area.

const map = {

  // The coordinates of the spawn point.
  start_position: {
    x: 1.5,
    y: 1.5,
    z: 1.5,
  },

  // The direction the player should face when spawned.
  start_direction: Math.PI * 0.25,

  // A 3-dimensional array that explicitly lists the type of each block in the
  // playable area. The map is indexed by "layer" (y-axis), "row" (z-axis), and
  // "col" (x-axis).
  // TODO: numbers shouldn't be hard-coded
  // TODO: shouldn't be necessary to exhaustively list each block
  blocks: [[
    [3, 3, 3, 3, 3, 3, 3, 3, 3],
    [3, 3, 3, 3, 3, 3, 3, 3, 3],
    [3, 3, 3, 3, 3, 3, 3, 3, 3],
    [3, 3, 3, 3, 3, 3, 3, 3, 3],
    [3, 3, 3, 3, 3, 3, 3, 3, 3],
    [3, 3, 3, 3, 3, 3, 3, 3, 3],
    [3, 3, 3, 3, 3, 3, 3, 3, 3],
    [3, 3, 3, 3, 3, 3, 3, 3, 3],
    [3, 3, 3, 3, 3, 3, 3, 3, 3],
  ], [
    [4, 4, 4, 4, 4, 4, 4, 4, 4],
    [4, 0, 0, 0, 0, 0, 0, 0, 4],
    [4, 0, 0, 0, 0, 0, 0, 0, 4],
    [4, 0, 0, 0, 0, 0, 0, 0, 4],
    [4, 0, 0, 0, 0, 0, 0, 0, 4],
    [4, 0, 0, 0, 0, 0, 0, 0, 4],
    [4, 0, 0, 4, 6, 4, 0, 0, 4],
    [4, 0, 0, 4, 4, 4, 0, 0, 4],
    [4, 4, 4, 4, 4, 4, 4, 4, 4],
  ], [
    [2, 2, 2, 2, 2, 2, 2, 2, 2],
    [2, 2, 2, 2, 2, 2, 2, 2, 2],
    [2, 2, 2, 2, 2, 2, 2, 2, 2],
    [2, 2, 2, 0, 0, 0, 2, 2, 2],
    [2, 2, 2, 0, 0, 0, 2, 2, 2],
    [2, 2, 2, 0, 0, 0, 2, 2, 2],
    [2, 2, 2, 2, 0, 2, 2, 2, 2],
    [2, 2, 2, 7, 0, 9, 2, 2, 2],
    [2, 2, 2, 2, 2, 2, 2, 2, 2],
  ], [
    [5, 5, 5, 5, 5, 5, 5, 5, 5],
    [5, 0, 0, 0, 0, 0, 0, 0, 5],
    [5, 0, 5, 5, 0, 5, 5, 0, 5],
    [5, 0, 5, 0, 0, 0, 5, 0, 5],
    [5, 0, 0, 0, 0, 0, 0, 0, 5],
    [5, 0, 5, 0, 0, 0, 5, 0, 5],
    [5, 0, 5, 5, 0, 5, 5, 0, 5],
    [5, 0, 0, 0, 0, 0, 0, 0, 5],
    [5, 5, 5, 5, 5, 5, 5, 5, 5],
  ], [
    [1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1],
  ]],
};
